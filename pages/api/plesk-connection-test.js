// pages/api/plesk-connection-test.js - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Plesk MySQL ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î  
import { testConnection } from '../../lib/mysql';

export default async function handler(req, res) {
  if (req.method !== 'GET') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const testResults = {
    timestamp: new Date().toISOString(),
    environment: process.env.NODE_ENV,
    connectionConfig: {
      host: process.env.DB_HOST,
      port: process.env.DB_PORT,
      database: process.env.DB_NAME,
      user: process.env.DB_USER,
      hasPassword: !!process.env.DB_PASSWORD,
      passwordLength: process.env.DB_PASSWORD?.length || 0
    },
    pleskInfo: {
      expectedPath: 'Plesk Control Panel ‚Üí Databases ‚Üí greendee_farm ‚Üí phpMyAdmin',
      connectionInfo: '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏ô Plesk ‚Üí Databases ‚Üí Connection Info'
    }
  };

  console.log('üß™ Starting Plesk MySQL connection test...');
  console.log('üìã Config:', testResults.connectionConfig);

  try {
    const connectionResult = await testConnection();
    
    if (connectionResult.success) {
      return res.status(200).json({
        success: true,
        message: '‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Plesk MySQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
        ...testResults,
        connectionResult,
        nextSteps: [
          '1. ‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß',
          '2. üìã ‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡πÉ‡∏ô phpMyAdmin',
          '3. üîê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö login/register',
          '4. üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!'
        ]
      });
    } else {
      return res.status(500).json({
        success: false,
        message: '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Plesk MySQL ‡πÑ‡∏î‡πâ',
        ...testResults,
        connectionResult,
        troubleshooting: {
          step1: {
            title: 'üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Plesk',
            instructions: [
              '‡πÄ‡∏Ç‡πâ‡∏≤ Plesk Control Panel',
              '‡πÑ‡∏õ‡∏ó‡∏µ‡πà "Databases"',
              '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• "greendee_farm"',
              '‡∏î‡∏π‡∏™‡πà‡∏ß‡∏ô "Connection Info" ‡∏´‡∏£‡∏∑‡∏≠ "External Connections"',
              '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Host, Port, Database Name, Username'
            ]
          },
          step2: {
            title: '‚öôÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå .env.local',
            instructions: [
              '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç DB_HOST ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÉ‡∏ô Plesk',
              '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç DB_PORT ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 3306',
              '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DB_NAME ‡πÅ‡∏•‡∏∞ DB_USER',
              '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DB_PASSWORD'
            ]
          },
          step3: {
            title: 'üîÑ ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠',
            options: [
              'localhost (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö shared hosting)',
              'IP address ‡∏Ç‡∏≠‡∏á server',
              'MySQL hostname ‡∏à‡∏≤‡∏Å Plesk',
              'Port ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏ä‡πà‡∏ô 3307, 3308'
            ]
          }
        }
      });
    }
  } catch (error) {
    console.error('üí• Plesk connection test failed:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      error: error.message,
      ...testResults
    });
  }
}